<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Vote360 - Cast Your Vote</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</head>
<body class="container py-5">
  <h2 class="text-center mb-4">üéâ Vote360 - Cast Your Vote</h2>

  <form id="voteForm" class="row g-4 justify-content-center">
    <div class="col-md-4">
      <label>Event</label>
      <select id="eventSelect" class="form-select" required></select>
    </div>

    <div class="col-md-4">
      <label>Category</label>
      <select id="categorySelect" class="form-select" required></select>
    </div>

    <div class="col-md-4">
      <label>Nominee</label>
      <select id="nomineeSelect" class="form-select" required></select>
    </div>

    <div class="col-md-4">
      <label>Votes</label>
      <input type="number" id="votesInput" class="form-control" min="1" value="1" required />
    </div>

    <div class="col-md-4">
      <label>Amount (GHS)</label>
      <input type="text" id="amountDisplay" class="form-control" readonly />
    </div>

    <div class="col-md-8 d-grid">
      <button type="submit" class="btn btn-primary btn-lg" id="voteBtn">Vote Now</button>
    </div>
  </form>

  <script>
    const API_URL = "https://script.google.com/macros/s/YOUR_WEB_APP_URL/exec";
    const TOKEN = "abc123";  // Same as AUTH_TOKEN in your backend

    const eventSelect = document.getElementById("eventSelect");
    const categorySelect = document.getElementById("categorySelect");
    const nomineeSelect = document.getElementById("nomineeSelect");
    const votesInput = document.getElementById("votesInput");
    const amountDisplay = document.getElementById("amountDisplay");

    votesInput.addEventListener("input", () => {
      const votes = parseInt(votesInput.value || 1);
      amountDisplay.value = (votes * 1).toFixed(2);
    });

    async function fetchData(action, payload = {}) {
      const res = await fetch(API_URL, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
          "Authorization": "Bearer " + TOKEN
        },
        body: JSON.stringify({ action, ...payload })
      });
      return res.json();
    }

    async function loadEvents() {
      const events = await fetchData("getActiveEvents");
      eventSelect.innerHTML = events.map(ev => `<option value="${ev.id}">${ev.title}</option>`).join("");
      await loadCategories();
    }

    async function loadCategories() {
      const eventId = eventSelect.value;
      const categories = await fetchData("getCategoriesByEvent", { eventId });
      categorySelect.innerHTML = categories.map(cat => `<option value="${cat.id}">${cat.title}</option>`).join("");
      await loadNominees();
    }

    async function loadNominees() {
      const categoryId = categorySelect.value;
      const nominees = await fetchData("getNomineesByCategory", { categoryId });
      nomineeSelect.innerHTML = nominees.map(nom => `<option value="${nom.id}">${nom.name}</option>`).join("");
    }

    eventSelect.addEventListener("change", loadCategories);
    categorySelect.addEventListener("change", loadNominees);

    document.getElementById("voteForm").addEventListener("submit", async (e) => {
      e.preventDefault();
      const votes = parseInt(votesInput.value);
      const amount = votes * 1;

      Swal.fire({ title: 'Submitting your vote...', didOpen: () => Swal.showLoading() });

      const res = await fetchData("recordVote", {
        eventId: eventSelect.value,
        categoryId: categorySelect.value,
        nomineeId: nomineeSelect.value,
        votes,
        amount,
        voter: "Anonymous"
      });

      if (res.success) {
        Swal.fire("‚úÖ Vote Cast!", res.message, "success");
        votesInput.value = 1;
        amountDisplay.value = "1.00";
      } else {
        Swal.fire("‚ùå Error", res.error || "Vote failed.", "error");
      }
    });

    // Initialize
    loadEvents();
    amountDisplay.value = "1.00";
  </script>
</body>
</html>
